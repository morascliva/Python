n = int(input())

if n == 0:
    print(0)
elif n == 1:
    print(1)
else:
    a, b = 0, 1
    for _ in range(2, n + 1):
        a, b = b, a + b
    print(b)

_ is a throwaway variable since we don’t use the loop counter.
This loop runs for each Fibonacci position starting from 2 up to n.
b becomes the sum of the last two numbers (like in the Fibonacci definition).
a moves forward to take the old b’s value.


def fib(n):
    if n == 0:
        return 0
    if n == 1:
        return 1
    return fib(n - 1) + fib(n - 2)

n = int(input())
print(fib(n))


return fib(n - 1) + fib(n - 2)
For any n > 1, Fibonacci is:


F(n)=F(n−1)+F(n−2)
The function calls itself twice:
Once for (n - 1) → previous number in the sequence
Once for (n - 2) → two numbers back
It adds the results together and returns the sum.



Example Run:
If we input:

n = 4
The calls look like this:


fib(4)
= fib(3) + fib(2)
= (fib(2) + fib(1)) + (fib(1) + fib(0))
= ((fib(1) + fib(0)) + 1) + (1 + 0)
= ((1 + 0) + 1) + (1 + 0)
= (1 + 1) + 1
= 2 + 1
= 3
So F(4) = 3 
