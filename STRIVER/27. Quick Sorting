
class Solution:
    def quickSort(self, nums):
        # Base case: array with 0 or 1 elements is already sorted
        if len(nums) <= 1:
            return nums

        # Choose pivot (here we take the last element)
        pivot = nums[-1]

        # Partition the array into two parts (elements < pivot, and >= pivot)
        left = [x for x in nums[:-1] if x <= pivot]
        right = [x for x in nums[:-1] if x > pivot]

        # Recursively sort both halves and combine
        return self.quickSort(left) + [pivot] + self.quickSort(right)


# Example usage
obj = Solution()
nums = [7, 4, 1, 5, 3]
print(obj.quickSort(nums))  # Output: [1, 3, 4, 5, 7]
