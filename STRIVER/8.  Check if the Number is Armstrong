cclass Solution:
    def is_armstrong(self, n):
        num_str = str(n)
        power = len(num_str)
        total = sum(int(digit) ** power for digit in num_str)
        return total == n

# Usage:
sol = Solution()
print(sol.is_armstrong(153))  # True

 num_str = str(n)
Converts the number to a string so you can loop through its digits.
Example:
If n = 153, then num_str = "153" (a string with characters '1', '5', '3')


Let’s break it into parts:

for digit in num_str

Loops through each digit (character) in the number string.

Example: "153" → digits: '1', '5', '3'

int(digit)

Converts the character back to an integer.

'5' → 5

int(digit) ** power

Raises the digit to the power of the number of digits.

If power = 3:
1**3 = 1, 5**3 = 125, 3**3 = 27

sum(...)

Adds all these values together.

1 + 125 + 27 = 153

So, total = 153




Example
Input: n = 153
Step-by-step:

num_str = "153"

power = 3

Digits: 1, 5, 3

1^3 = 1, 5^3 = 125, 3^3 = 27

Total = 1 + 125 + 27 = 153

153 == 153 → ✅ Armstrong number → returns True
